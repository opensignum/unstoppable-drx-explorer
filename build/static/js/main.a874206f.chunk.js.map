{"version":3,"sources":["assets/svg/logo.svg","assets/svg/graphic.svg","pages/home/duck/Types.js","pages/home/duck/Actions.js","pages/home/duck/Reducers.js","pages/home/duck/Sagas.js","pages/home/Home.js","components/error/duck/Types.js","components/error/duck/Actions.js","components/error/duck/Reducers.js","components/error/duck/__Stub__.js","components/error/duck/Sagas.js","components/error/duck/Selectors.js","components/error/ErrorHandler.js","components/page/Page.js","components/page/content/Content.js","components/page/footer/Footer.js","components/page/index.js","pages/error/Error.js","router/Router.js","app/duck/Types.js","app/duck/Actions.js","app/duck/Auth.js","app/duck/Reducers.js","app/duck/Sagas.js","app/App.js","reducers.js","sagas.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","types","Actions","payload","type","SEARCH_ISRC","defaultState","recordings","combineReducers","state","arguments","length","undefined","_ref","SEARCH_ISRC_SUCCESS","searchISRC","main","isrc","_yield$call","data","regenerator_default","a","wrap","_context","prev","next","call","axios","get","concat","sent","console","log","put","t0","SEARCH_ISRC_ERROR","stop","_marked","_context2","takeEvery","_marked2","PageHome","_this$props","this","props","SearchISRC","react_default","createElement","className","Container","src","circles","style","width","alt","Menu","secondary","Item","logo","position","name","active","onClick","id","Search","input","fluid","placeholder","onSearchChange","event","value","results","map","r","title","creditedArtist","description","additionalArtists","artist","join","React","Component","connect","home","dispatch","values","actions","withRouter","duck_Actions","CLEAR","errors","APP_ERROR","Object","toConsumableArray","_Stub_","post","resource","includes","Promise","resolve","setTimeout","status","reject","message","stub","Sagas_marked","Sagas_marked2","ErrorHandler","Clear","forEach","error","NotificationManager","lib","Page","background","children","classNames","defaultProps","PageContent","isCentered","is-centered","PageFooter","Content","Footer","PageError","code","history","hasBackButton","page","Router","react_router_dom","Fragment","react_router","exact","path","component","Error","assign","app_duck_Actions","INIT","Auth","user","localStorage","getItem","setItem","token","timestamp","Date","getTime","parseFloat","removeItem","jwtDecode","sub","decoded","roles","entries","item","isConnected","isAuthenticated","VALIDATE_CONNECTION_SUCCESS","VALIDATE_CONNECTION_ERROR","_ref2","JSON","parse","auth","loginTypes","AUTH_MOBILECONNECT_SUCCESS","stringify","LOGIN_SUCCESS","defaults","headers","common","Authorization","expires","LOGOUT","_ref3","_ref4","_ref5","LOGIN","LOGIN_ERROR","init","duck_Sagas_marked","duck_Sagas_marked2","App","Init","color","router_Router","_ref$app","app","args","reducers","root","sagas","all","sagas_marked","sagaMiddleware","createSagaMiddleware","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","run","Boolean","location","hostname","match","baseURL","process","timeout","ReactDOM","render","es","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8VCEzBC,MAAO,QAAS,CAC3B,cACA,sBACA,sBCDWC,EAFI,SAAAC,GAAO,MAAM,CAAEC,KAAMH,EAAMI,YAAaF,oBCErDG,EAAe,CACjBC,WAAY,IAWDC,cAAiB,CAC5BD,WATe,WAA0D,IAAxDE,EAAwDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhDJ,EAAaC,WAAmCM,EAAAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAArBR,EAAqBS,EAArBT,KAAMD,EAAeU,EAAfV,QAC1D,OAAKC,IAASH,EAAMa,oBACTX,EAGJM,yCCJDM,cAaeC,GAbzB,SAAUD,EAAVF,GAAA,IAAAV,EAAAc,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGyB,OAHDtB,EAAxBU,EAAwBV,QAAxBoB,EAAAC,KAAA,EAEgBP,EAASd,EAATc,KAFhBM,EAAAE,KAAA,EAG+BC,YAAMC,IAAMC,IAAR,2BAAAC,OAAyCZ,IAH5E,OAKQ,OALRC,EAAAK,EAAAO,KAGgBX,EAHhBD,EAGgBC,KACRY,QAAQC,IAAKb,GAJrBI,EAAAE,KAAA,GAKcQ,YAAK,CAAE7B,KAAMH,EAAMa,oBAAqBX,QAASgB,IAL/D,QAAAI,EAAAE,KAAA,iBAOQ,OAPRF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAAAA,EAAAE,KAAA,GAOcQ,YAAK,CACP7B,KAAMH,EAAMkC,kBAAmBhC,QAAOoB,EAAAW,KARlD,yBAAAX,EAAAa,SAAAC,EAAA,eAae,SAAUrB,IAAV,OAAAI,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACX,OADWa,EAAAb,KAAA,EACLc,YAAWtC,EAAMI,YAAaU,GADzB,wBAAAuB,EAAAF,SAAAI,OCTTC,yKACO,IAAAC,EAIDC,KAAKC,MAFLC,EAFCH,EAEDG,WACAtC,EAHCmC,EAGDnC,WAGJ,OACIuC,EAAAzB,EAAA0B,cAAA,WACID,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,cACfF,EAAAzB,EAAA0B,cAACE,EAAA,EAAD,KAEIH,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,eACXF,EAAAzB,EAAA0B,cAAA,OAAKG,IAAMC,IAAUC,MAAQ,CAAEC,MAAO,QAAWC,IAAI,aAGzDR,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,QACXF,EAAAzB,EAAA0B,cAACQ,EAAA,EAAD,CAAMC,WAAS,GACXV,EAAAzB,EAAA0B,cAACQ,EAAA,EAAKE,KAAN,KACIX,EAAAzB,EAAA0B,cAAA,OAAKG,IAAMQ,IAAON,MAAQ,CAAEC,MAAO,SAAYC,IAAI,UAEvDR,EAAAzB,EAAA0B,cAACQ,EAAA,EAAKA,KAAN,CAAWI,SAAS,SAChBb,EAAAzB,EAAA0B,cAACQ,EAAA,EAAKE,KAAN,CACIG,KAAK,UACLC,QAAM,EACNC,QAAU,iBAKtBhB,EAAAzB,EAAA0B,cAAA,OAAKgB,GAAG,cACJjB,EAAAzB,EAAA0B,cAACiB,EAAA,EAAD,CACIC,MAAQ,CAAEC,OAAO,GACjBA,OAAK,EACLC,YAAY,aACZC,eAAiB,SAAEC,EAAOlD,GAAT,OAAmB0B,EAAY,CAAE5B,KAAME,EAAKmD,SAC7DC,QAAUhE,EAAWiE,IAAK,SAAAC,GAAC,MAAM,CAC7BC,MAAK,GAAA7C,OAAM4C,EAAEE,eAAR,OAAA9C,OAA8B4C,EAAEC,OACrCE,YAAaH,EAAEI,kBAAkBL,IAAK,SAAAnD,GAAC,OAAIA,EAAEyD,OAAOlB,OAAOmB,KAAM,sBAtC9EC,IAAMC,WA+DdC,cAZF,SAAArE,GAAA,MAIJ,CACLN,WALSM,EACTsE,KACI5E,aAMK,SAAA6E,GAAQ,MAAM,CACvBvC,WAAY,SAAAwC,GAAM,OAAID,EAAUE,EAAoBD,OAGzCH,CAAuBK,YAAY9C,aC1EnCxC,MAAO,OAAQ,CAC1B,YACA,UCAWuF,EAFI,iBAAQ,CAAEpF,KAAMH,EAAMwF,iBCCnCnF,EAAe,GAYNE,cAAiB,CAC5BkF,OAXW,WAA+C,IAA7CjF,EAA6CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArCJ,EAAqCO,EAAAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAArBR,EAAqBS,EAArBT,KAAMD,EAAeU,EAAfV,QAC3C,OAAKC,IAASH,EAAM0F,UAChB,GAAA9D,OAAA+D,OAAAC,EAAA,EAAAD,CAAYnF,GAAZ,CAAmBN,IAElBC,IAASH,EAAMwF,MACT,GAEJhF,KCLI,IAAAqF,EAAA,CAAEC,KAPjB,SAAeC,GACX,OAAKA,EAASC,SAAU,gBACb,IAAIC,QAAS,SAAAC,GAAO,OAAIC,WAAYD,EAAS,IAAK,CAAEhF,KAAM,GAAIkF,OAAQ,QAE1E,IAAIH,QAAS,SAAEC,EAASG,GAAX,OAAuBF,WAAYE,EAAQ,IAAK,CAAEnF,KAAM,CAAEoF,QAAS,qBAAuBF,OAAQ,qBCChHrE,cAQehB,GARzB,SAAUgB,EAAVnB,GAAA,IAAAV,EAAA,OAAAiB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEQ,OAFStB,EAAjBU,EAAiBV,QAAjBoB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEcC,YAAM8E,EAAKT,KAAM,eAAgB5F,GAF/C,OAAAoB,EAAAE,KAAA,gBAIQ,OAJRF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,cAAAA,EAAAE,KAAA,6BAAAF,EAAAa,SAAAqE,EAAA,cAQe,SAAUzF,IAAV,OAAAI,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACX,OADWa,EAAAb,KAAA,EACLc,YAAWtC,EAAM0F,UAAW3D,GADvB,wBAAAM,EAAAF,SAAAsE,GCbf,ICOMC,qLAMmB,IAAAjE,EACSC,KAAKC,MAAvB8C,EADShD,EACTgD,OAAQkB,EADClE,EACDkE,MACXlB,EAAO/E,OAAS,IACjB+E,EAAOmB,QAAS,SAAEC,GACdC,sBAAoBD,MAAOA,EAAO,QAAS,OAE/CF,sCAKJ,OAAO9D,EAAAzB,EAAA0B,cAACiE,EAAA,sBAAD,aAjBY/B,gBA2BZC,YANF,SAAArE,GAAA,MAA+B,CAAE6E,OAAjC7E,EAAIiG,MAASpB,SAEb,SAAAN,GAAQ,MAAM,CACvBwB,MAAO,kBAAMxB,EAAUE,QAGZJ,CAAuByB,kBC9BhCM,EAAO,SAAApG,GAAA,IAAImC,EAAJnC,EAAImC,UAAWkE,EAAfrG,EAAeqG,WAAYC,EAA3BtG,EAA2BsG,SAA3B,OACTrE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAYoE,IAAY,OAAQpE,EAAV,kBAAAnB,OAAwCqF,KAC7DC,IASVF,EAAKI,aAAe,CAChBH,WAAY,SAGDD,SCfTK,GAAc,SAAAzG,GAAA,IAAImC,EAAJnC,EAAImC,UAAWuE,EAAf1G,EAAe0G,WAAYJ,EAA3BtG,EAA2BsG,SAA3B,OAChBrE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAYoE,IAAY,eAAgBpE,EAAW,CAAEwE,cAAeD,KACnEJ,IASVG,GAAYD,aAAe,CACvBE,YAAY,GAGDD,UCfTG,GAAa,SAAA5G,GAAA,IAAIsG,EAAJtG,EAAIsG,SAAJ,OACfrE,EAAAzB,EAAA0B,cAAA,UAAQC,UAAYoE,IAAY,gBAC5BtE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,6BACTmE,KASdM,GAAWJ,aAAe,GAGXI,UCffR,GAAKS,QAAUJ,GACfL,GAAKU,OAASF,GAECR,UCHTW,GAAY,SAAA/G,KACdgH,KADchH,EAEd6D,MAFc7D,EAGd0F,QAHc1F,EAIdiH,QAJcjH,EAKdkH,cALc,OAOdjF,EAAAzB,EAAA0B,cAACiF,GAAD,KACIlF,EAAAzB,EAAA0B,cAACiF,GAAKN,QAAN,QAcRE,GAAUP,aAAe,CACrBS,QAAS,GACTC,eAAe,GAGJH,UClBTK,GAAS,SAAApH,GAAA,IAAIsG,EAAJtG,EAAIsG,SAAJ,OACXrE,EAAAzB,EAAA0B,cAACmF,EAAA,EAAD,KACIpF,EAAAzB,EAAA0B,cAACD,EAAAzB,EAAM8G,SAAP,KACMhB,EACFrE,EAAAzB,EAAA0B,cAACqF,EAAA,EAAD,KAEItF,EAAAzB,EAAA0B,cAACqF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY9F,IAElCK,EAAAzB,EAAA0B,cAACqF,EAAA,EAAD,CACIE,KAAK,IACLC,UAAY,SAAA3F,GAAK,OACbE,EAAAzB,EAAA0B,cAACyF,GAAD5C,OAAA6C,OAAA,CACIZ,KAAO,IACPnD,MAAM,iBACN6B,QAAU,iKACVwB,eAAa,GACRnF,WAajCqF,GAAOZ,aAAe,CAClBF,SAAU,MAGCc,UC5CAhI,OAAO,OAAQ,CAC1B,OACA,8BACA,8BCCWyI,GAJF,SAAAvI,GAAO,MAAM,CAAEC,KAAMH,GAAM0I,KAAMxI,+BC2E/ByI,GA9CC,WACZ,IAAMC,EAAOC,aAAaC,QA9Bb,QA+Bb,OAAMF,GACK,MA2CAD,GAtCC,SAAEC,GACdC,aAAaE,QAtCA,OAsCmBH,IAqCrBD,GAlEE,WACb,IAAMK,EAAQH,aAAaC,QATb,SAURG,EAAYJ,aAAaC,QATb,aAUlB,OAAME,IAAUC,IAAa,IAAIC,MAAOC,WAAaC,WAAYH,GACtD,KAEJD,GA4DIL,GAnDE,SAAEK,EAAOC,GACtBJ,aAAaE,QAxBC,QAwBmBC,GACjCH,aAAaE,QAxBK,YAwBmB,IAAIG,KAAkB,IAAZD,GAAmBE,YAiDvDR,GA/BK,WAChBE,aAAaQ,WA5CC,SA6CdR,aAAaQ,WA5CK,cAyEPV,GApBK,SAAEK,GAElB,OADgBM,GAAWN,GACZO,KAAO,MAkBXZ,GARQ,SAAEK,GACrB,IAAMQ,EAAUF,GAAWN,GAC3B,OAAKQ,EAAQC,MACF9D,OAAO+D,QAASF,EAAQC,OAAQlF,IAAK,SAAAoF,GAAI,OAAIA,EAAM,KAEvD,ICjELtJ,GAAe,CACjBuJ,YAAa,KACbC,iBAAiB,EACjBjB,KAAM,KACNa,MAAO,GACPhE,OAAQ,IAoFGlF,eAAiB,CAC5BqJ,YAlFgB,WAAkD,IAAhDpJ,EAAgDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxCJ,GAAauJ,YAAezJ,GAAYM,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAAZR,KACtD,OAAKA,IAASH,GAAM8J,6BAGf3J,IAASH,GAAM+J,2BAGbvJ,GA4EPqJ,gBAzEoB,WAA+D,IAA7DrJ,EAA6DC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArDJ,GAAawJ,gBAAwCG,EAAAvJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAArBR,EAAqB6J,EAArB7J,KAAMD,EAAe8J,EAAf9J,QACpE,OAAKC,IAASH,GAAM0I,OACHuB,KAAKC,MAAOC,MAOxBhK,IAASiK,EAAWC,4BACrBF,GAAcF,KAAKK,UAAWpK,KACvB,GAENC,IAASH,GAAMuK,eAChB7I,IAAM8I,SAASC,QAAQC,OAAOC,cAA9B,UAAA/I,OAAyD1B,EAAQ8I,OACjEmB,GAAejK,EAAQ8I,MAAO9I,EAAQ0K,UAE/B,GAENzK,IAASH,GAAM6K,QAChBnJ,IAAM8I,SAASC,QAAQC,OAAOC,cAAgB,KAC9CR,KACAA,GAAc,OACP,GAEJ3J,GAiDPoI,KA9CS,WAAoD,IAAlDpI,EAAkDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1CJ,GAAauI,KAA6BkC,EAAArK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAArBR,EAAqB2K,EAArB3K,KAAMD,EAAe4K,EAAf5K,QAC9C,OAAKC,IAASH,GAAM0I,KACTuB,KAAKC,MAAOC,MAElBhK,IAASH,GAAMuK,cACTJ,GAAkBjK,EAAQ8I,OAEhC7I,IAASH,GAAM6K,OACT,KAEJrK,GAqCPiJ,MAlCU,WAAqD,IAAnDjJ,EAAmDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3CJ,GAAaoJ,MAA8BsB,EAAAtK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAArBR,EAAqB4K,EAArB5K,KAAMD,EAAe6K,EAAf7K,QAChD,GAAKC,IAASH,GAAM0I,KAAO,CACvB,IAAMM,EAAQmB,KACd,OAAKnB,EACMmB,GAAqBnB,GAEzB,GAEX,OAAK7I,IAASiK,EAAWC,2BACd,CAAE,aAERlK,IAASH,GAAMuK,cACTJ,GAAqBjK,EAAQ8I,OAEnC7I,IAASH,GAAM6K,OACT,GAEJrK,GAkBPiF,OAfW,WAAsD,IAApDjF,EAAoDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5CJ,GAAaoF,OAA+BuF,EAAAvK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAArBR,EAAqB6K,EAArB7K,KAAMD,EAAe8K,EAAf9K,QAClD,OAAKC,IAASH,GAAMiL,MACT,GAEN9K,IAASH,GAAMkL,YACThL,EAEJM,iBCxFD2K,gBAcepK,IAdzB,SAAUoK,KAAV,OAAAhK,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQQ,OARRF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAQcQ,YAAK,CAAE7B,KAAMH,GAAM8J,8BARjC,OAAAxI,EAAAE,KAAA,eAUQ,OAVRF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAAAA,EAAAE,KAAA,EAUcQ,YAAK,CAAE7B,KAAMH,GAAM+J,0BAA2BlD,MAAKvF,EAAAW,KAVjE,wBAAAX,EAAAa,SAAAiJ,GAAA,cAce,SAAUrK,KAAV,OAAAI,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACX,OADWa,EAAAb,KAAA,EACLc,YAAWtC,GAAM0I,KAAMyC,IADlB,wBAAA9I,EAAAF,SAAAkJ,QCPTC,sLAIEC,EAFiB7I,KAAKC,MAAd4I,yCAUR,OAAqB,IAFjB7I,KAAKC,MADLiH,YAKI/G,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,OACXF,EAAAzB,EAAA0B,cAACyF,GAAD,CACIX,KAAO,IACPnD,MAAM,+BACN6B,QAAQ,0BACRkF,MAAM,QACNvE,WAAW,aAOvBpE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,OACXF,EAAAzB,EAAA0B,cAAC2I,GAAD,cA5BE1G,IAAMC,WAkCxBsG,GAAIlE,aAAe,CACfwC,YAAa,MASjB,IAYe3E,eAZF,SAAArE,GAAA,IAAA8K,EAAA9K,EACT+K,IADS,MAIJ,CACL/B,YALS8B,EAEL9B,YAGSC,gBALJ6B,EAEQ7B,gBAGaJ,MALrBiC,EAEyBjC,QAMzB,SAAAtE,GAAQ,MAAM,CACvBoG,KAAM,SAAAK,GAAI,OAAIzG,EAAUE,GAAcuG,OAG3B3G,CAAuBqG,cC/DhCO,GAAW,CAEbF,OACAzG,OACA2B,SAGWtG,eAAiBsL,gBCAPC,IAPnBC,GAAQ,CAEVJ,KACAzG,IACA2B,KAGW,SAAUiF,KAAV,OAAA3K,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAmB,OAAnBF,EAAAE,KAAA,EAAyBwK,YAAKD,IAA9B,wBAAAzK,EAAAa,SAAA8J,ICRf,IAAMC,GAAiBC,eACjBC,GAAa,CAAEF,IACfG,GAAmBC,OAAOC,sCAAwCC,IAElEC,GAAQC,YACVC,GACAN,GAAkBO,IAAeC,WAAf,EAAoBT,MAE1CF,GAAeY,IAAKf,IAELU,UCHKM,QACW,cAA7BT,OAAOU,SAASC,UAEgB,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MAC1B,2DCXJxL,IAAM8I,SAAS2C,QAAUC,mMAAA,qBAAAxL,OAAmCwL,eAC5D1L,IAAM8I,SAAS6C,QAAU,IAEzBC,IAASC,OACL1K,EAAAzB,EAAA0B,cAAC0K,EAAA,EAAD,CAAUf,MAAQA,IACd5J,EAAAzB,EAAA0B,cAAC2K,GAAD,OAEJC,SAASC,eAAgB,SDmHvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAACC,GAClCA,EAAaC","file":"static/js/main.a874206f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.686eb887.svg\";","module.exports = __webpack_public_path__ + \"static/media/graphic.c7645dec.svg\";","import types from \"redux-types\";\n\nexport default types( \"@home\", [\n    \"SEARCH_ISRC\",\n    \"SEARCH_ISRC_SUCCESS\",\n    \"SEARCH_ISRC_ERROR\",\n] );\n","import types from \"./Types\";\n\nconst searchISRC = payload => ( { type: types.SEARCH_ISRC, payload } );\n\nexport default {\n    searchISRC,\n};\n","import { combineReducers } from \"redux\";\n\nimport types from \"./Types\";\n\nconst defaultState = {\n    recordings: [],\n};\n\nconst recordings = ( state = defaultState.recordings, { type, payload } ) => {\n    if ( type === types.SEARCH_ISRC_SUCCESS ) {\n        return payload;\n    }\n\n    return state;\n};\n\nexport default combineReducers( {\n    recordings,\n} );\n","import {\n    call,\n    put,\n    takeEvery,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport types from \"./Types\";\n\nfunction* searchISRC( { payload } ) {\n    try {\n        const { isrc } = payload;\n        const { data } = yield call( axios.get, `/recordings/search?isrc=${ isrc }` );\n        console.log( data );\n        yield put( { type: types.SEARCH_ISRC_SUCCESS, payload: data } );\n    } catch ( error ) {\n        yield put( {\n            type: types.SEARCH_ISRC_ERROR, payload: error,\n        } );\n    }\n}\n\nexport default function* main() {\n    yield takeEvery( types.SEARCH_ISRC, searchISRC );\n}\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable complexity */\n/* eslint-disable no-nested-ternary */\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n    Menu, Container, Search,\n} from \"semantic-ui-react\";\nimport logo from \"assets/svg/logo.svg\";\nimport circles from \"assets/svg/graphic.svg\";\nimport { actions } from \"./duck\";\n\nclass PageHome extends React.Component {\n    render() {\n        const {\n            SearchISRC,\n            recordings,\n        } = this.props;\n\n        return (\n            <div>\n                <div className=\"white-box\" />\n                <Container>\n\n                    <div className=\"circles-box\">\n                        <img src={ circles } style={ { width: \"100%\" } } alt=\"circles\" />\n                    </div>\n\n                    <div className=\"page\">\n                        <Menu secondary>\n                            <Menu.Item>\n                                <img src={ logo } style={ { width: \"120px\" } } alt=\"logo\" />\n                            </Menu.Item>\n                            <Menu.Menu position=\"right\">\n                                <Menu.Item\n                                    name=\"gateway\"\n                                    active\n                                    onClick={ () => {} }\n                                />\n\n                            </Menu.Menu>\n                        </Menu>\n                        <div id=\"search-box\">\n                            <Search\n                                input={ { fluid: true } }\n                                fluid\n                                placeholder=\"Enter ISRC\"\n                                onSearchChange={ ( event, data ) => SearchISRC( { isrc: data.value } ) }\n                                results={ recordings.map( r => ( {\n                                    title: `${ r.creditedArtist } - ${ r.title }`,\n                                    description: r.additionalArtists.map( a => a.artist.name ).join( \", \" ),\n                                } ) ) }\n                            />\n\n                        </div>\n                    </div>\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mSTP = ( {\n    home: {\n        recordings,\n    },\n} ) => ( {\n    recordings,\n} );\n\nconst mDTP = dispatch => ( {\n    SearchISRC: values => dispatch( actions.searchISRC( values ) ),\n} );\n\nexport default connect( mSTP, mDTP )( withRouter( PageHome ) );\n","import types from \"redux-types\";\n\nexport default types( \"@app\", [\n    \"APP_ERROR\",\n    \"CLEAR\",\n] );\n","import types from \"./Types\";\n\nconst clearError = () => ( { type: types.CLEAR } );\n\nexport default {\n    clearError,\n};\n","import { combineReducers } from \"redux\";\nimport types from \"./Types\";\n\nconst defaultState = [];\n\nconst errors = ( state = defaultState, { type, payload } ) => {\n    if ( type === types.APP_ERROR ) {\n        return [ ...state, payload ];\n    }\n    if ( type === types.CLEAR ) {\n        return [];\n    }\n    return state;\n};\n\nexport default combineReducers( {\n    errors,\n} );\n","function post( resource ) {\n    if ( resource.includes( \"/api/errors/\" ) ) {\n        return new Promise( resolve => setTimeout( resolve, 100, { data: {}, status: 200 } ) );\n    }\n    return new Promise( ( resolve, reject ) => setTimeout( reject, 500, { data: { message: \"An error occurred\" }, status: 500 } ) );\n}\n\nexport default { post };\n","import { call, takeEvery } from \"redux-saga/effects\";\n\nimport stub from \"./__Stub__\";\nimport types from \"./Types\";\n\nfunction* log( { payload } ) {\n    try {\n        yield call( stub.post, \"/api/errors/\", payload );\n    } catch ( error ) {\n        yield;\n    }\n}\n\nexport default function* main() {\n    yield takeEvery( types.APP_ERROR, log );\n}\n","const errorType = ( error, validationError, appError ) => ( error.data && error.data.errors ? validationError : appError );\n\nconst errorPayload = ( { data, message } ) => ( data && data.errors ? data.errors : ( data && data.message ) || message );\n\nexport default {\n    errorType,\n    errorPayload,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { arrayOf, string, func } from \"prop-types\";\n\nimport { actions } from \"./duck\";\n\nclass ErrorHandler extends Component {\n    static propTypes = {\n        errors: arrayOf( string.isRequired ).isRequired,\n        Clear: func.isRequired,\n    }\n\n    componentDidUpdate() {\n        const { errors, Clear } = this.props;\n        if ( errors.length > 0 ) {\n            errors.forEach( ( error ) => {\n                NotificationManager.error( error, \"Error\", 3000 );\n            } );\n            Clear();\n        }\n    }\n\n    render() {\n        return <NotificationContainer />;\n    }\n}\n\nconst mSTP = ( { error: { errors } } ) => ( { errors } );\n\nconst mDTP = dispatch => ( {\n    Clear: () => dispatch( actions.clearError() ),\n} );\n\nexport default connect( mSTP, mDTP )( ErrorHandler );\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst Page = ( { className, background, children } ) => (\n    <div className={ classNames( \"page\", className, `has-background-${ background }` ) }>\n        { children }\n    </div>\n);\n\nPage.propTypes = {\n    children: PropTypes.node.isRequired,\n    background: PropTypes.string,\n};\n\nPage.defaultProps = {\n    background: \"white\",\n};\n\nexport default Page;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst PageContent = ( { className, isCentered, children } ) => (\n    <div className={ classNames( \"page-content\", className, { \"is-centered\": isCentered } ) }>\n        { children }\n    </div>\n);\n\nPageContent.propTypes = {\n    isCentered: PropTypes.bool,\n    children: PropTypes.node.isRequired,\n};\n\nPageContent.defaultProps = {\n    isCentered: false,\n};\n\nexport default PageContent;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst PageFooter = ( { children } ) => (\n    <footer className={ classNames( \"page-footer\" ) }>\n        <div className=\"content has-text-centered\">\n            { children }\n        </div>\n    </footer>\n);\n\nPageFooter.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nPageFooter.defaultProps = {\n};\n\nexport default PageFooter;\n","import Page from \"./Page\";\nimport PageContent from \"./content/Content\";\nimport PageFooter from \"./footer/Footer\";\n\nPage.Content = PageContent;\nPage.Footer = PageFooter;\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Page } from \"components\";\n\nconst PageError = ( {\n    code,\n    title,\n    message,\n    history,\n    hasBackButton,\n} ) => (\n    <Page>\n        <Page.Content>\n\n        </Page.Content>\n    </Page>\n);\n\nPageError.propTypes = {\n    code: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    history: PropTypes.shape(),\n    hasBackButton: PropTypes.bool,\n};\n\nPageError.defaultProps = {\n    history: {},\n    hasBackButton: false,\n};\n\nexport default PageError;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport {\n    PageHome,\n    PageError,\n} from \"../pages\";\n\nconst Router = ( { children } ) => (\n    <BrowserRouter>\n        <React.Fragment>\n            { children }\n            <Switch>\n\n                <Route exact path=\"/\" component={ PageHome } />\n\n                <Route\n                    path=\"*\"\n                    component={ props => (\n                        <PageError\n                            code={ 404 }\n                            title=\"Page not found\"\n                            message={ \"Sorry, but the page you are looking for was either not found or does not exist.\\nTry refreshing the page or click the button below to go back to the Homepage.\" }\n                            hasBackButton\n                            { ...props }\n                        />\n                    ) }\n                />\n            </Switch>\n        </React.Fragment>\n    </BrowserRouter>\n);\n\nRouter.propTypes = {\n    children: PropTypes.node,\n};\n\nRouter.defaultProps = {\n    children: null,\n};\n\nexport default Router;\n","import types from \"redux-types\";\n\nexport default types( \"@app\", [\n    \"INIT\",\n    \"VALIDATE_CONNECTION_SUCCESS\",\n    \"VALIDATE_CONNECTION_ERROR\",\n] );\n","import types from \"./Types\";\n\nconst init = payload => ( { type: types.INIT, payload } );\n\nconst logout = () => ( { type: types.LOGOUT } );\n\nexport default {\n    init,\n    logout,\n};\n","import * as jwtDecode from \"jwt-decode\";\n\nconst USER_KEY = \"user\";\nconst TOKEN_KEY = \"token\";\nconst TIMESTAMP_KEY = \"timestamp\";\n\n/**\n * Gets a token from localstorage.\n *\n * @returns the token if it is valid.\n */\nconst getToken = () => {\n    const token = localStorage.getItem( TOKEN_KEY );\n    const timestamp = localStorage.getItem( TIMESTAMP_KEY );\n    if ( !token || !timestamp || new Date().getTime() >= parseFloat( timestamp ) ) {\n        return null;\n    }\n    return token;\n};\n\n/**\n * Stores the token and timestamp.\n *\n * @param {String} token the token to store.\n * @param {Number} timestamp the timestamp to store.\n */\nconst setToken = ( token, timestamp ) => {\n    localStorage.setItem( TOKEN_KEY, token );\n    localStorage.setItem( TIMESTAMP_KEY, new Date( timestamp * 1000 ).getTime() );\n};\n\nconst getUser = () => {\n    const user = localStorage.getItem( USER_KEY );\n    if ( !user ) {\n        return null;\n    }\n    return user;\n};\n\nconst setUser = ( user ) => {\n    localStorage.setItem( USER_KEY, user );\n};\n\n/**\n * Removes the token from localstorage.\n */\nconst removeToken = () => {\n    localStorage.removeItem( TOKEN_KEY );\n    localStorage.removeItem( TIMESTAMP_KEY );\n};\n\n/**\n * Gets the id from a token.\n *\n * @param {String} token the token to get the id from.\n * @returns the id or null.\n */\nconst idFromToken = ( token ) => {\n    const decoded = jwtDecode( token );\n    return decoded.sub || null;\n};\n\n/**\n * Gets the roles from the token.\n *\n * @param {String} token the token to retrive the\n * roles from.\n * @returns array of roles or an empty array.\n */\nconst rolesFromToken = ( token ) => {\n    const decoded = jwtDecode( token );\n    if ( decoded.roles ) {\n        return Object.entries( decoded.roles ).map( item => item[ 1 ] );\n    }\n    return [];\n};\n\nexport default {\n    getUser,\n    setUser,\n    getToken,\n    setToken,\n    removeToken,\n    idFromToken,\n    rolesFromToken,\n\n};\n","/* eslint-disable complexity */\nimport { combineReducers } from \"redux\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport types from \"./Types\";\nimport auth from \"./Auth\";\nimport { types as loginTypes } from \"../../pages/home/duck\";\n\nconst defaultState = {\n    isConnected: null,\n    isAuthenticated: false,\n    user: null,\n    roles: [],\n    errors: {},\n};\n\nconst isConnected = ( state = defaultState.isConnected, { type } ) => {\n    if ( type === types.VALIDATE_CONNECTION_SUCCESS ) {\n        return true;\n    }\n    if ( type === types.VALIDATE_CONNECTION_ERROR ) {\n        return true;\n    }\n    return state;\n};\n\nconst isAuthenticated = ( state = defaultState.isAuthenticated, { type, payload } ) => {\n    if ( type === types.INIT ) {\n        const user = JSON.parse( auth.getUser() );\n        if ( user ) {\n            // axios.defaults.headers.common.Authorization = `Bearer ${ token }`;\n            return true;\n        }\n        return false;\n    }\n    if ( type === loginTypes.AUTH_MOBILECONNECT_SUCCESS ) {\n        auth.setUser( JSON.stringify( payload ) );\n        return true;\n    }\n    if ( type === types.LOGIN_SUCCESS ) {\n        axios.defaults.headers.common.Authorization = `Bearer ${ payload.token }`;\n        auth.setToken( payload.token, payload.expires );\n\n        return true;\n    }\n    if ( type === types.LOGOUT ) {\n        axios.defaults.headers.common.Authorization = null;\n        auth.removeToken();\n        auth.setUser( null );\n        return false;\n    }\n    return state;\n};\n\nconst user = ( state = defaultState.user, { type, payload } ) => {\n    if ( type === types.INIT ) {\n        return JSON.parse( auth.getUser() );\n    }\n    if ( type === types.LOGIN_SUCCESS ) {\n        return auth.idFromToken( payload.token );\n    }\n    if ( type === types.LOGOUT ) {\n        return null;\n    }\n    return state;\n};\n\nconst roles = ( state = defaultState.roles, { type, payload } ) => {\n    if ( type === types.INIT ) {\n        const token = auth.getToken();\n        if ( token ) {\n            return auth.rolesFromToken( token );\n        }\n        return [];\n    }\n    if ( type === loginTypes.AUTH_MOBILECONNECT_SUCCESS ) {\n        return [ \"ROLE_USER\" ];\n    }\n    if ( type === types.LOGIN_SUCCESS ) {\n        return auth.rolesFromToken( payload.token );\n    }\n    if ( type === types.LOGOUT ) {\n        return [];\n    }\n    return state;\n};\n\nconst errors = ( state = defaultState.errors, { type, payload } ) => {\n    if ( type === types.LOGIN ) {\n        return {};\n    }\n    if ( type === types.LOGIN_ERROR ) {\n        return payload;\n    }\n    return state;\n};\n\nexport default combineReducers( {\n    isConnected,\n    isAuthenticated,\n    user,\n    roles,\n    errors,\n} );\n","import {\n    call,\n    put,\n    takeEvery,\n} from \"redux-saga/effects\";\nimport types from \"./Types\";\n\nfunction* init() {\n    // const env = process.env.REACT_APP_ENV_NAME;\n    // const health = process.env[ `REACT_APP_HEALTH_URL_${ env }` ];\n\n    try {\n        /* yield all( [\n            call( axios.get, `${ health }` ),\n        ] ); */\n        yield put( { type: types.VALIDATE_CONNECTION_SUCCESS } );\n    } catch ( error ) {\n        yield put( { type: types.VALIDATE_CONNECTION_ERROR, error } );\n    }\n}\n\nexport default function* main() {\n    yield takeEvery( types.INIT, init );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"react-notifications/lib/notifications.css\";\nimport \"../assets/scss/style.scss\";\n\nimport Router from \"router/Router\";\n\nimport { PageError } from \"pages\";\nimport { ErrorHandler } from \"components\";\nimport { actions } from \"./duck\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        const { Init } = this.props;\n\n        Init();\n    }\n\n    render() {\n        const {\n            isConnected,\n        } = this.props;\n\n        if ( isConnected === false ) {\n            return (\n                <div className=\"app\">\n                    <PageError\n                        code={ 503 }\n                        title=\"Could not connect to the API\"\n                        message=\"Please try again later.\"\n                        color=\"white\"\n                        background=\"primary\"\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"app\">\n                <Router />\n            </div>\n        );\n    }\n}\n\nApp.defaultProps = {\n    isConnected: null,\n};\n\nApp.propTypes = {\n    isConnected: PropTypes.bool,\n\n    Init: PropTypes.func.isRequired,\n};\n\nconst mSTP = ( {\n    app: {\n        isConnected, isAuthenticated, roles,\n    },\n} ) => ( {\n    isConnected, isAuthenticated, roles,\n} );\n\nconst mDTP = dispatch => ( {\n    Init: args => dispatch( actions.init( args ) ),\n} );\n\nexport default connect( mSTP, mDTP )( App );\n","import { combineReducers } from \"redux\";\n\n// Imported reducers\nimport { reducers as app } from \"./app/duck\";\nimport { reducers as home } from \"./pages/home/duck\";\nimport { reducers as error } from \"./components/error/duck\";\n\nconst reducers = {\n    // Combined reducers\n    app,\n    home,\n    error,\n};\n\nexport default combineReducers( reducers );\n","import { all } from \"redux-saga/effects\";\n\n// Imported sagas\nimport { sagas as app } from \"./app/duck\";\nimport { sagas as home } from \"./pages/home/duck\";\nimport { sagas as error } from \"./components/error/duck\";\n\nconst sagas = [\n    // Combined sagas\n    app(),\n    home(),\n    error(),\n];\n\nexport default function* root() { yield all( sagas ); }\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./reducers\";\nimport sagas from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [ sagaMiddleware ];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers( applyMiddleware( ...middleware ) ),\n);\nsagaMiddleware.run( sagas );\n\nexport default store;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\"\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === \"[::1]\"\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \"\n            + \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \"\n                + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n\n/* eslint-enable */\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\nimport App from \"./app/App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\naxios.defaults.baseURL = process.env[ `REACT_APP_API_URL_${ process.env.REACT_APP_ENV_NAME }` ];\naxios.defaults.timeout = 20000;\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById( \"root\" ),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}